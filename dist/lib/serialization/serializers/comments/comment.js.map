{"version":3,"file":"comment.js","sourceRoot":"","sources":["../../../../../src/lib/serialization/serializers/comments/comment.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,sDAAqD;AACrD,0CAA0C;AAE1C,+CAAuD;AAGvD;IAAuC,qCAA4B;IADnE;QAAA,qEAwCC;QA3BC,oBAAc,GAAG,mBAAiB,CAAC,cAAc,CAAC;QAClD,0BAAoB,GAAG,gBAAO,CAAC;;IA0BjC,CAAC;0BAvCY,iBAAiB;IAOX,gCAAc,GAA/B,UAAgC,QAAa;QAC3C,MAAM,CAAC,QAAQ,YAAY,gBAAO,CAAC;IACrC,CAAC;IAMD,sCAAU,GAAV;QACE,iBAAM,UAAU,WAAE,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,UAAC,CAAU,IAAK,OAAA,IAAI,EAAJ,CAAI,CAAC;IACvC,CAAC;IAED,oCAAQ,GAAR,UAAS,OAAgB,EAAE,GAAS;QAApC,iBAkBC;QAjBC,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;QAEhB,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;YACtB,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;QACpC,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;YACjB,GAAG,CAAC,IAAI,GAAQ,OAAO,CAAC,IAAI,CAAC;QAC/B,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YACpB,GAAG,CAAC,OAAO,GAAK,OAAO,CAAC,OAAO,CAAC;QAClC,CAAC;QAED,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACxC,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC;YACd,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,GAAG,IAAK,OAAA,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAvC,CAAuC,CAAC,CAAC;QACzE,CAAC;QACD,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IApCM,0BAAQ,GAAG,IAAI,CAAC;IAFZ,iBAAiB;QAD7B,qBAAS,CAAC,EAAC,IAAI,EAAE,oBAAoB,EAAC,CAAC;OAC3B,iBAAiB,CAuC7B;IAAD,wBAAC;;CAAA,AAvCD,CAAuC,gCAAmB,GAuCzD;AAvCY,8CAAiB","sourcesContent":["import { Component } from '../../../utils/component';\nimport { Comment } from '../../../models';\n\nimport { SerializerComponent } from '../../components';\n\n@Component({name: 'serializer:comment'})\nexport class CommentSerializer extends SerializerComponent<Comment> {\n\n  static PRIORITY = 1000;\n\n  /**\n   * Filter for instances of [[Comment]]\n   */\n  protected static serializeGroup(instance: any): boolean {\n    return instance instanceof Comment;\n  }\n\n  // use same fn for every instance\n  serializeGroup = CommentSerializer.serializeGroup;\n  serializeGroupSymbol = Comment;\n\n  initialize(): void {\n    super.initialize();\n    this.supports = (r: Comment) => true;\n  }\n\n  toObject(comment: Comment, obj?: any): any {\n    obj = obj || {};\n\n    if (comment.shortText) {\n      obj.shortText = comment.shortText;\n    }\n    if (comment.text) {\n      obj.text      = comment.text;\n    }\n    if (comment.returns) {\n      obj.returns   = comment.returns;\n    }\n\n    if (comment.tags && comment.tags.length) {\n      obj.tags = [];\n      comment.tags.forEach((tag) => obj.tags.push(this.owner.toObject(tag)));\n    }\n    return obj;\n  }\n}\n"]}