{"version":3,"file":"reflection-group.js","sourceRoot":"","sources":["../../../../src/lib/serialization/serializers/reflection-group.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,mDAAkD;AAClD,gEAA+D;AAE/D,4CAAoD;AAGpD;IAA+C,6CAAoC;IADnF;QAAA,qEAoCC;QAvBC,oBAAc,GAAG,2BAAyB,CAAC,cAAc,CAAC;QAC1D,0BAAoB,GAAG,iCAAe,CAAC;;IAsBzC,CAAC;kCAnCY,yBAAyB;IAOnB,wCAAc,GAA/B,UAAgC,QAAa;QAC3C,MAAM,CAAC,QAAQ,YAAY,iCAAe,CAAC;IAC7C,CAAC;IAMD,8CAAU,GAAV;QACE,iBAAM,UAAU,WAAE,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,UAAC,CAAkB,IAAK,OAAA,CAAC,YAAY,iCAAe,EAA5B,CAA4B,CAAC;IACvE,CAAC;IAED,4CAAQ,GAAR,UAAS,KAAsB,EAAE,GAAS;QACxC,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;QAEhB,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE;YACjB,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,IAAI,EAAG,KAAK,CAAC,IAAI;SAClB,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAChD,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAE,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,EAAE,EAAR,CAAQ,CAAE,CAAC;QACzD,CAAC;QAED,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IA/BM,kCAAQ,GAAG,IAAI,CAAC;IAFZ,yBAAyB;QADrC,qBAAS,CAAC,EAAC,IAAI,EAAE,6BAA6B,EAAC,CAAC;OACpC,yBAAyB,CAmCrC;IAAD,gCAAC;;CAAA,AAnCD,CAA+C,gCAAmB,GAmCjE;AAnCY,8DAAyB","sourcesContent":["import { Component } from '../../utils/component';\nimport { ReflectionGroup } from '../../models/ReflectionGroup';\n\nimport { SerializerComponent } from '../components';\n\n@Component({name: 'serializer:reflection-group'})\nexport class ReflectionGroupSerializer extends SerializerComponent<ReflectionGroup> {\n\n  static PRIORITY = 1000;\n\n  /**\n   * Filter for instances of [[ReflectionGroup]]\n   */\n  protected static serializeGroup(instance: any): boolean {\n    return instance instanceof ReflectionGroup;\n  }\n\n  // use same fn for every instance\n  serializeGroup = ReflectionGroupSerializer.serializeGroup;\n  serializeGroupSymbol = ReflectionGroup;\n\n  initialize(): void {\n    super.initialize();\n    this.supports = (r: ReflectionGroup) => r instanceof ReflectionGroup;\n  }\n\n  toObject(group: ReflectionGroup, obj?: any): any {\n    obj = obj || {};\n\n    Object.assign(obj, {\n      title: group.title,\n      kind:  group.kind\n    });\n\n    if (group.children && group.children.length > 0) {\n      obj.children = group.children.map( child => child.id );\n    }\n\n    return obj;\n  }\n\n}\n"]}