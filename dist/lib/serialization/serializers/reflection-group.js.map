{"version":3,"file":"reflection-group.js","sourceRoot":"","sources":["../../../../src/lib/serialization/serializers/reflection-group.ts"],"names":[],"mappings":";;;;;;;;AAAA,qDAAkD;AAClD,kEAA+D;AAE/D,8CAAoD;AAGpD,IAAa,yBAAyB,GAAtC,MAAa,yBAA0B,SAAQ,gCAAoC;IADnF;;QAYE,yBAAoB,GAAG,iCAAe,CAAC;IA6BzC,CAAC;IAjCC,cAAc,CAAC,QAAa;QAC1B,OAAO,QAAQ,YAAY,iCAAe,CAAC;IAC7C,CAAC;IAID,UAAU;QACR,KAAK,CAAC,UAAU,EAAE,CAAC;IACrB,CAAC;IAED,QAAQ,CAAC,CAAU;QACjB,OAAO,CAAC,YAAY,iCAAe,CAAC;IACtC,CAAC;IAED,QAAQ,CAAC,KAAsB,EAAE,GAAS;QACxC,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;QAEhB,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE;YACjB,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,IAAI,EAAG,KAAK,CAAC,IAAI;SAClB,CAAC,CAAC;QAEH,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/C,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAE,CAAC;SACxD;QAED,IAAI,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YACnD,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC,GAAG,CAAE,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAE,CAAC;SACpF;QAED,OAAO,GAAG,CAAC;IACb,CAAC;CAEF,CAAA;AAtCQ,kCAAQ,GAAG,IAAI,CAAC;AAFZ,yBAAyB;IADrC,qBAAS,CAAC,EAAC,IAAI,EAAE,6BAA6B,EAAC,CAAC;GACpC,yBAAyB,CAwCrC;AAxCY,8DAAyB","sourcesContent":["import { Component } from '../../utils/component';\nimport { ReflectionGroup } from '../../models/ReflectionGroup';\n\nimport { SerializerComponent } from '../components';\n\n@Component({name: 'serializer:reflection-group'})\nexport class ReflectionGroupSerializer extends SerializerComponent<ReflectionGroup> {\n\n  static PRIORITY = 1000;\n\n  /**\n   * Filter for instances of [[ReflectionGroup]]\n   */\n  serializeGroup(instance: any): boolean {\n    return instance instanceof ReflectionGroup;\n  }\n\n  serializeGroupSymbol = ReflectionGroup;\n\n  initialize(): void {\n    super.initialize();\n  }\n\n  supports(r: unknown) {\n    return r instanceof ReflectionGroup;\n  }\n\n  toObject(group: ReflectionGroup, obj?: any): any {\n    obj = obj || {};\n\n    Object.assign(obj, {\n      title: group.title,\n      kind:  group.kind\n    });\n\n    if (group.children && group.children.length > 0) {\n      obj.children = group.children.map( child => child.id );\n    }\n\n    if (group.categories && group.categories.length > 0) {\n      obj.categories = group.categories.map( category => this.owner.toObject(category) );\n    }\n\n    return obj;\n  }\n\n}\n"]}