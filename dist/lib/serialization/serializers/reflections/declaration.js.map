{"version":3,"file":"declaration.js","sourceRoot":"","sources":["../../../../../src/lib/serialization/serializers/reflections/declaration.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '../../../utils/component';\nimport { DeclarationReflection } from '../../../models';\n\nimport { ReflectionSerializerComponent } from '../../components';\nimport { ContainerReflectionSerializer } from './container';\n\n@Component({name: 'serializer:declaration-reflection'})\nexport class DeclarationReflectionSerializer extends ReflectionSerializerComponent<DeclarationReflection> {\n\n  static PRIORITY = ContainerReflectionSerializer.PRIORITY - 1; // mimic inheritance, run after parent\n\n  initialize(): void {\n    super.initialize();\n    this.supports = (r: DeclarationReflection) => r instanceof DeclarationReflection;\n  }\n\n  toObject(declaration: DeclarationReflection, obj?: any): any {\n    obj = obj || {};\n\n    if (declaration.type) {\n      obj.type = this.owner.toObject(declaration.type);\n    }\n\n    if (declaration.defaultValue) {\n      obj.defaultValue = declaration.defaultValue;\n    }\n\n    if (declaration.overwrites) {\n      obj.overwrites = this.owner.toObject(declaration.overwrites);\n    }\n\n    if (declaration.inheritedFrom) {\n      obj.inheritedFrom = this.owner.toObject(declaration.inheritedFrom);\n    }\n\n    if (declaration.extendedTypes) {\n      obj.extendedTypes = declaration.extendedTypes.map((t) => this.owner.toObject(t) );\n    }\n\n    if (declaration.extendedBy) {\n      obj.extendedBy = declaration.extendedBy.map((t) => this.owner.toObject(t) );\n    }\n\n    if (declaration.implementedTypes) {\n      obj.implementedTypes = declaration.implementedTypes.map((t) => this.owner.toObject(t) );\n    }\n\n    if (declaration.implementedBy) {\n      obj.implementedBy = declaration.implementedBy.map((t) => this.owner.toObject(t) );\n    }\n\n    if (declaration.implementationOf) {\n      obj.implementationOf = this.owner.toObject(declaration.implementationOf);\n    }\n\n    return obj;\n  }\n\n}\n"]}