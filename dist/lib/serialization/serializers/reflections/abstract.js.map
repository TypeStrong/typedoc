{"version":3,"file":"abstract.js","sourceRoot":"","sources":["../../../../../src/lib/serialization/serializers/reflections/abstract.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '../../../utils/component';\nimport { Reflection, TraverseProperty } from '../../../models';\n\nimport { ReflectionSerializerComponent } from '../../components';\nimport { DecoratorWrapper } from '../models';\n\n@Component({name: 'serializer:reflection'})\nexport class ReflectionSerializer extends ReflectionSerializerComponent<Reflection> {\n\n  static PRIORITY = 1000;\n\n  initialize(): void {\n    super.initialize();\n    this.supports = (r: Reflection) => true;\n  }\n\n  toObject(reflection: Reflection, obj?: any): any {\n    obj = obj || {};\n\n    Object.assign(obj, {\n      id:         reflection.id,\n      name:       reflection.name,\n      kind:       reflection.kind,\n      kindString: reflection.kindString,\n      flags:      {}                      // TODO: remove if no flags\n    });\n\n    if (reflection.originalName !== reflection.name) {\n      obj.originalName = reflection.originalName;\n    }\n\n    if (reflection.comment) {\n      obj.comment = this.owner.toObject(reflection.comment);\n    }\n\n    for (let key in reflection.flags) {\n      // tslint:disable-next-line:triple-equals\n      if (parseInt(key, 10) == <any> key || key === 'flags') {\n        continue;\n      }\n      if (reflection.flags[key]) {\n        obj.flags[key] = true;\n      }\n    }\n\n    if (reflection.decorates && reflection.decorates.length > 0) {\n      obj.decorates = reflection.decorates.map( t => this.owner.toObject(t) );\n    }\n\n    if (reflection.decorators && reflection.decorators.length > 0) {\n      obj.decorators = reflection.decorators.map( d => this.owner.toObject(new DecoratorWrapper(d)) );\n    }\n\n    reflection.traverse((child, property) => {\n      if (property === TraverseProperty.TypeLiteral) {\n        return;\n      }\n      let name = TraverseProperty[property];\n      name = name.substr(0, 1).toLowerCase() + name.substr(1);\n      switch (property) {\n        case TraverseProperty.GetSignature:\n        case TraverseProperty.SetSignature:\n        case TraverseProperty.IndexSignature:\n          obj[name] = this.owner.toObject(child);\n          break;\n        default:\n          if (!obj[name]) {\n            obj[name] = [];\n          }\n          obj[name].push(this.owner.toObject(child));\n          break;\n      }\n    });\n\n    return obj;\n  }\n}\n"]}