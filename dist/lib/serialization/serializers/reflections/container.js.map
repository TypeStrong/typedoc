{"version":3,"file":"container.js","sourceRoot":"","sources":["../../../../../src/lib/serialization/serializers/reflections/container.ts"],"names":[],"mappings":";;;;;;;;AAAA,wDAAqD;AACrD,4CAAsD;AAEtD,iDAAiE;AACjE,sCAAmD;AAGnD,IAAa,6BAA6B,GAA1C,MAAa,6BAA8B,SAAQ,0CAAkD;IAEnG,QAAQ,CAAC,CAAU;QACjB,OAAO,CAAC,YAAY,4BAAmB,CAAC;IAC1C,CAAC;IAED,QAAQ,CAAC,SAA8B,EAAE,GAAS;QAChD,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;QAEhB,IAAI,SAAS,CAAC,MAAM,IAAI,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACnD,GAAG,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,GAAG,CAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAE,CAAC;SAC1E;QAED,IAAI,SAAS,CAAC,UAAU,IAAI,SAAS,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3D,GAAG,CAAC,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC,GAAG,CAAE,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAE,CAAC;SACxF;QAED,IAAI,SAAS,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACrD,GAAG,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO;iBAC5B,GAAG,CAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK;iBACvB,QAAQ,CAAC,IAAI,+BAAsB,CAAC;gBACnC,QAAQ,EAAE,MAAM,CAAC,QAAQ;gBACzB,IAAI,EAAE,MAAM,CAAC,IAAI;gBACjB,SAAS,EAAE,MAAM,CAAC,SAAS;aAC5B,CAAC,CAAC,CACJ,CAAC;SACL;QAED,OAAO,GAAG,CAAC;IACb,CAAC;CAEF,CAAA;AA/BY,6BAA6B;IADzC,qBAAS,CAAC,EAAC,IAAI,EAAE,iCAAiC,EAAC,CAAC;GACxC,6BAA6B,CA+BzC;AA/BY,sEAA6B","sourcesContent":["import { Component } from '../../../utils/component';\nimport { ContainerReflection } from '../../../models';\n\nimport { ReflectionSerializerComponent } from '../../components';\nimport { SourceReferenceWrapper } from '../models';\n\n@Component({name: 'serializer:container-reflection'})\nexport class ContainerReflectionSerializer extends ReflectionSerializerComponent<ContainerReflection> {\n\n  supports(t: unknown) {\n    return t instanceof ContainerReflection;\n  }\n\n  toObject(container: ContainerReflection, obj?: any): any {\n    obj = obj || {};\n\n    if (container.groups && container.groups.length > 0) {\n      obj.groups = container.groups.map( group => this.owner.toObject(group) );\n    }\n\n    if (container.categories && container.categories.length > 0) {\n      obj.categories = container.categories.map( category => this.owner.toObject(category) );\n    }\n\n    if (container.sources && container.sources.length > 0) {\n      obj.sources = container.sources\n        .map( source => this.owner\n          .toObject(new SourceReferenceWrapper({\n            fileName: source.fileName,\n            line: source.line,\n            character: source.character\n          }))\n        );\n    }\n\n    return obj;\n  }\n\n}\n"]}