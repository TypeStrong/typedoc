{"version":3,"file":"serializer.js","sourceRoot":"","sources":["../../../src/lib/serialization/serializer.ts"],"names":[],"mappings":"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","sourcesContent":["import { ChildableComponent } from '../utils';\nimport { Component, ComponentClass } from '../utils/component';\nimport { Application } from '../application';\nimport { ProjectReflection } from '../models';\n\nimport { SerializerComponent } from './components';\nimport { SerializeEvent } from './events';\n\n@Component({name: 'serializer', internal: true, childClass: SerializerComponent})\nexport class Serializer extends ChildableComponent<Application, SerializerComponent<any>> {\n\n  /**\n   * Triggered when the [[Serializer]] begins transforming a project.\n   * @event EVENT_BEGIN\n   */\n  static EVENT_BEGIN = 'begin';\n\n  /**\n   * Triggered when the [[Serializer]] has finished transforming a project.\n   * @event EVENT_END\n   */\n  static EVENT_END = 'end';\n\n  private router: Map<any, { symbol: any, group: SerializerComponent<any>[] }>;\n  private routes: any[];\n\n  initialize(): void {\n    this.router = new Map<any, { symbol: any, group: SerializerComponent<any>[] }>();\n    this.routes = [];\n  }\n\n  addComponent<T extends SerializerComponent<any> & Component>(name: string, componentClass: T | ComponentClass<T>): T {\n    const component = super.addComponent(name, componentClass);\n\n    if (component.serializeGroup && component.serializeGroupSymbol) {\n      let match = this.router.get(component.serializeGroup);\n\n      if (!match) {\n        match = Array.from(this.router.values()).find( v => v.symbol === component.serializeGroupSymbol)\n          || { symbol: component.serializeGroupSymbol , group: [] };\n        this.router.set(component.serializeGroup, match);\n        this.routes.push(component.serializeGroup);\n      }\n      match.group.push(component);\n      match.group.sort((a, b) => (b.priority || 0) - (a.priority || 0));\n\n      return component;\n    }\n  }\n\n  /**\n   * Remove a child component from the registry.\n   * @param name The name the component registered as\n   */\n  removeComponent(name: string): SerializerComponent<any> {\n    const component = super.removeComponent(name);\n    const symbol = component && component.serializeGroupSymbol;\n    if (symbol) {\n      const values = Array.from(this.router.values());\n      for (let i = 0, len = values.length; i < len; i++) {\n        const idx = values[i].group.findIndex( o => o === symbol );\n        if (idx > -1) {\n          values[i].group.splice(idx, 1);\n          break;\n        }\n      }\n    }\n    return component;\n  }\n\n  removeAllComponents() {\n    super.removeAllComponents();\n\n    this.router = new Map<any, { symbol: any, group: SerializerComponent<any>[] }>();\n    this.routes = [];\n  }\n\n  toObject(value: any, obj?: any): any {\n    return this.findRoutes(value)\n      .reduce( (result, curr) => curr.toObject(value, result), obj);\n  }\n\n  /**\n   * Same as toObject but emits [[ Serializer#EVENT_BEGIN ]] and [[ Serializer#EVENT_END ]] events.\n   * @param value\n   * @param eventData Partial information to set in the event\n   * @return {any}\n   */\n  projectToObject(value: ProjectReflection, eventData?: { begin?: any, end?: any }): any {\n    const eventBegin = new SerializeEvent(Serializer.EVENT_BEGIN);\n\n    if (eventData && eventData.begin) {\n      Object.assign(eventBegin, eventData.begin);\n    }\n    eventBegin.project = value;\n    let project: any = eventBegin.output = {};\n\n    this.trigger(eventBegin);\n    project = this.toObject(value, project);\n\n    const eventEnd = new SerializeEvent(Serializer.EVENT_END);\n    if (eventData && eventData.end) {\n      Object.assign(eventEnd, eventData.end);\n    }\n    eventEnd.project = value;\n    eventEnd.output = project;\n    this.trigger(eventEnd);\n\n    return project;\n  }\n\n  private findRoutes(value: any): SerializerComponent<any>[] {\n    const routes = [];\n    for (let i = 0, len = this.routes.length; i < len; i++) {\n      if (this.routes[i](value)) {\n        const serializers = this.router.get(this.routes[i]).group;\n        for (let serializer of serializers) {\n          if (serializer.supports(value)) {\n            routes.push(serializer);\n          }\n        }\n      }\n    }\n    return routes;\n  }\n}\n"]}