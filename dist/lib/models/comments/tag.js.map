{"version":3,"file":"tag.js","sourceRoot":"","sources":["../../../../src/lib/models/comments/tag.ts"],"names":[],"mappings":";;AAKA,MAAa,UAAU;IAmBnB,YAAY,OAAe,EAAE,SAAkB,EAAE,IAAa;QAC1D,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,SAAS,IAAI,EAAE,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;IAC3B,CAAC;IAMD,QAAQ;QACJ,MAAM,MAAM,GAAQ;YAChB,GAAG,EAAG,IAAI,CAAC,OAAO;YAClB,IAAI,EAAE,IAAI,CAAC,IAAI;SAClB,CAAC;QAEF,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;SACjC;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;CACJ;AAzCD,gCAyCC","sourcesContent":["/**\n * A model that represents a single javadoc comment tag.\n *\n * Tags are stored in the [[Comment.tags]] property.\n */\nexport class CommentTag {\n    /**\n     * The name of this tag.\n     */\n    tagName: string;\n\n    /**\n     * The name of the related parameter when this is a ```@param``` tag.\n     */\n    paramName: string;\n\n    /**\n     * The actual body text of this tag.\n     */\n    text: string;\n\n    /**\n     * Create a new CommentTag instance.\n     */\n    constructor(tagName: string, paramName?: string, text?: string) {\n        this.tagName = tagName;\n        this.paramName = paramName || '';\n        this.text = text || '';\n    }\n\n    /**\n     * Return a raw object representation of this tag.\n     * @deprecated Use serializers instead\n     */\n    toObject(): any {\n        const result: any = {\n            tag:  this.tagName,\n            text: this.text\n        };\n\n        if (this.paramName) {\n            result.param = this.paramName;\n        }\n\n        return result;\n    }\n}\n"]}