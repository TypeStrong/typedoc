{"version":3,"file":"declaration.js","sourceRoot":"","sources":["../../../../src/lib/utils/options/declaration.ts"],"names":[],"mappings":"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","sourcesContent":["export enum ParameterHint {\n    File,\n    Directory\n}\n\nexport enum ParameterType {\n    String,\n    Number,\n    Boolean,\n    Map,\n    Mixed,\n    Array\n}\n\nexport enum ParameterScope {\n    TypeDoc, TypeScript\n}\n\nexport interface DeclarationOption {\n    name: string;\n    component?: string;\n    short?: string;\n    help: string;\n    type?: ParameterType;\n    hint?: ParameterHint;\n    scope?: ParameterScope;\n    map?: {};\n    mapError?: string;\n    defaultValue?: any;\n    convert?: (param: OptionDeclaration, value?: any) => any;\n}\n\nexport class OptionDeclaration {\n    name: string;\n\n    short: string;\n\n    component: string;\n\n    help: string;\n\n    type: ParameterType;\n\n    hint: ParameterHint;\n\n    scope: ParameterScope;\n\n    protected map: Object | Map<string, any> | 'object';\n\n    mapError: string;\n\n    isArray: boolean;\n\n    defaultValue: any;\n\n    constructor(data: DeclarationOption) {\n        for (let key in data) {\n            this[key] = data[key];\n        }\n\n        this.type  = this.type  || ParameterType.String;\n        this.scope = this.scope || ParameterScope.TypeDoc;\n    }\n\n    getNames(): string[] {\n        const result = [this.name.toLowerCase()];\n\n        if (this.short) {\n            result.push(this.short.toLowerCase());\n        }\n\n        return result;\n    }\n\n    convert(value: any, errorCallback?: Function): any {\n        switch (this.type) {\n            case ParameterType.Number:\n                value = parseInt(value, 10);\n                break;\n            case ParameterType.Boolean:\n                value = (typeof value === void 0 ? true : !!value);\n                break;\n            case ParameterType.String:\n                value = value || '';\n                break;\n            case ParameterType.Array:\n                if (!value) {\n                    value = [];\n                } else if (typeof value === 'string') {\n                    value = value.split(',');\n                }\n                break;\n            case ParameterType.Map:\n                const map = this.map;\n                if (map !== 'object') {\n                    const key = value ? (value + '').toLowerCase() : '';\n                    const values = Object.keys(map).map(key => map[key]);\n\n                    if (map instanceof Map) {\n                        value = map.has(key) ? map.get(key) : value;\n                    } else if (key in map) {\n                        value = map[key];\n                    } else if (values.indexOf(value) === -1 && errorCallback) {\n                        if (this.mapError) {\n                            errorCallback(this.mapError);\n                        } else {\n                            errorCallback('Invalid value for option \"%s\".', this.name);\n                        }\n                    }\n                }\n                break;\n        }\n\n        return value;\n    }\n}\n"]}