{"version":3,"file":"DefaultTheme.js","sourceRoot":"","sources":["../../../../src/lib/output/themes/DefaultTheme.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Path from 'path';\nimport * as FS from 'fs';\n\nimport { Theme } from '../theme';\nimport { Renderer } from '../renderer';\nimport { Reflection, ReflectionKind, ProjectReflection, ContainerReflection, DeclarationReflection } from '../../models/reflections/index';\nimport { ReflectionGroup } from '../../models/ReflectionGroup';\nimport { UrlMapping } from '../models/UrlMapping';\nimport { NavigationItem } from '../models/NavigationItem';\nimport { RendererEvent } from '../events';\n\n/**\n * Defines a mapping of a [[Models.Kind]] to a template file.\n *\n * Used by [[DefaultTheme]] to map reflections to output files.\n */\nexport interface TemplateMapping {\n    /**\n     * [[DeclarationReflection.kind]] this rule applies to.\n     */\n    kind: ReflectionKind[];\n\n    /**\n     * Can this mapping have children or should all further reflections be rendered\n     * to the defined output page?\n     */\n    isLeaf: boolean;\n\n    /**\n     * The name of the directory the output files should be written to.\n     */\n    directory: string;\n\n    /**\n     * The name of the template that should be used to render the reflection.\n     */\n    template: string;\n}\n\n/**\n * Default theme implementation of TypeDoc. If a theme does not provide a custom\n * [[BaseTheme]] implementation, this theme class will be used.\n */\nexport class DefaultTheme extends Theme {\n    /**\n     * Mappings of reflections kinds to templates used by this theme.\n     */\n    static MAPPINGS: TemplateMapping[] = [{\n        kind:      [ReflectionKind.Class],\n        isLeaf:    false,\n        directory: 'classes',\n        template:  'reflection.hbs'\n    }, {\n        kind:      [ReflectionKind.Interface],\n        isLeaf:    false,\n        directory: 'interfaces',\n        template:  'reflection.hbs'\n    }, {\n        kind:      [ReflectionKind.Enum],\n        isLeaf:    false,\n        directory: 'enums',\n        template:  'reflection.hbs'\n    }, {\n        kind:      [ReflectionKind.Module, ReflectionKind.ExternalModule],\n        isLeaf:    false,\n        directory: 'modules',\n        template:  'reflection.hbs'\n    }];\n\n    static URL_PREFIX: RegExp = /^(http|ftp)s?:\\/\\//;\n\n    /**\n     * Create a new DefaultTheme instance.\n     *\n     * @param renderer  The renderer this theme is attached to.\n     * @param basePath  The base path of this theme.\n     */\n    constructor(renderer: Renderer, basePath: string) {\n        super(renderer, basePath);\n        this.listenTo(renderer, RendererEvent.BEGIN, this.onRendererBegin, 1024);\n    }\n\n    /**\n     * Test whether the given path contains a documentation generated by this theme.\n     *\n     * @param path  The path of the directory that should be tested.\n     * @returns     TRUE if the given path seems to be a previous output directory,\n     *              otherwise FALSE.\n     */\n    isOutputDirectory(path: string): boolean {\n        if (!FS.existsSync(Path.join(path, 'index.html'))) {\n            return false;\n        }\n        if (!FS.existsSync(Path.join(path, 'assets'))) {\n            return false;\n        }\n        if (!FS.existsSync(Path.join(path, 'assets', 'js', 'main.js'))) {\n            return false;\n        }\n        if (!FS.existsSync(Path.join(path, 'assets', 'images', 'icons.png'))) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Map the models of the given project to the desired output files.\n     *\n     * @param project  The project whose urls should be generated.\n     * @returns        A list of [[UrlMapping]] instances defining which models\n     *                 should be rendered to which files.\n     */\n    getUrls(project: ProjectReflection): UrlMapping[] {\n        const urls: UrlMapping[] = [];\n        const entryPoint = this.getEntryPoint(project);\n\n        if (this.application.options.getValue('readme') === 'none') {\n            entryPoint.url = 'index.html';\n            urls.push(new UrlMapping('index.html', entryPoint, 'reflection.hbs'));\n        } else {\n            entryPoint.url = 'globals.html';\n            urls.push(new UrlMapping('globals.html', entryPoint, 'reflection.hbs'));\n            urls.push(new UrlMapping('index.html',   project, 'index.hbs'));\n        }\n\n        if (entryPoint.children) {\n            entryPoint.children.forEach((child: Reflection) => {\n                if (child instanceof DeclarationReflection) {\n                    DefaultTheme.buildUrls(child, urls);\n                }\n            });\n        }\n\n        return urls;\n    }\n\n    /**\n     * Return the entry point of the documentation.\n     *\n     * @param project  The current project.\n     * @returns The reflection that should be used as the entry point.\n     */\n    getEntryPoint(project: ProjectReflection): ContainerReflection {\n        const entryPoint = this.owner.entryPoint;\n        if (entryPoint) {\n            const reflection = project.getChildByName(entryPoint);\n            if (reflection) {\n                if (reflection instanceof ContainerReflection) {\n                    return reflection;\n                } else {\n                    this.application.logger.warn('The given entry point `%s` is not a container.', entryPoint);\n                }\n            } else {\n                this.application.logger.warn('The entry point `%s` could not be found.', entryPoint);\n            }\n        }\n\n        return project;\n    }\n\n    /**\n     * Create a navigation structure for the given project.\n     *\n     * @param project  The project whose navigation should be generated.\n     * @returns        The root navigation item.\n     */\n    getNavigation(project: ProjectReflection): NavigationItem {\n        /**\n         * Test whether the given list of modules contains an external module.\n         *\n         * @param modules  The list of modules to test.\n         * @returns        TRUE if any of the modules is marked as being external.\n         */\n        function containsExternals(modules: DeclarationReflection[]): boolean {\n            for (let index = 0, length = modules.length; index < length; index++) {\n                if (modules[index].flags.isExternal) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        /**\n         * Sort the given list of modules by name, groups external modules at the bottom.\n         *\n         * @param modules  The list of modules that should be sorted.\n         */\n        function sortReflections(modules: DeclarationReflection[]) {\n            modules.sort((a: DeclarationReflection, b: DeclarationReflection) => {\n                if (a.flags.isExternal && !b.flags.isExternal) {\n                    return  1;\n                }\n                if (!a.flags.isExternal && b.flags.isExternal) {\n                    return -1;\n                }\n                return a.getFullName() < b.getFullName() ? -1 : 1;\n            });\n        }\n\n        /**\n         * Find the urls of all children of the given reflection and store them as dedicated urls\n         * of the given NavigationItem.\n         *\n         * @param reflection  The reflection whose children urls should be included.\n         * @param item        The navigation node whose dedicated urls should be set.\n         */\n        function includeDedicatedUrls(reflection: DeclarationReflection, item: NavigationItem) {\n            (function walk(reflection: DeclarationReflection) {\n                for (let key in reflection.children) {\n                    const child = reflection.children[key];\n                    if (child.hasOwnDocument && !child.kindOf(ReflectionKind.SomeModule)) {\n                        if (!item.dedicatedUrls) {\n                            item.dedicatedUrls = [];\n                        }\n                        item.dedicatedUrls.push(child.url);\n                        walk(child);\n                    }\n                }\n            })(reflection);\n        }\n\n        /**\n         * Create navigation nodes for all container children of the given reflection.\n         *\n         * @param reflection  The reflection whose children modules should be transformed into navigation nodes.\n         * @param parent      The parent NavigationItem of the newly created nodes.\n         */\n        function buildChildren(reflection: DeclarationReflection, parent: NavigationItem) {\n            const modules = reflection.getChildrenByKind(ReflectionKind.SomeModule);\n            modules.sort((a: DeclarationReflection, b: DeclarationReflection) => {\n                return a.getFullName() < b.getFullName() ? -1 : 1;\n            });\n\n            modules.forEach((reflection) => {\n                const item = NavigationItem.create(reflection, parent);\n                includeDedicatedUrls(reflection, item);\n                buildChildren(reflection, item);\n            });\n        }\n\n        /**\n         * Create navigation nodes for the given list of reflections. The resulting nodes will be grouped into\n         * an \"internal\" and an \"external\" section when applicable.\n         *\n         * @param reflections  The list of reflections which should be transformed into navigation nodes.\n         * @param parent       The parent NavigationItem of the newly created nodes.\n         * @param callback     Optional callback invoked for each generated node.\n         */\n        function buildGroups(reflections: DeclarationReflection[], parent: NavigationItem,\n                             callback?: (reflection: DeclarationReflection, item: NavigationItem) => void) {\n            let state = -1;\n            const hasExternals = containsExternals(reflections);\n            sortReflections(reflections);\n\n            reflections.forEach((reflection) => {\n                if (hasExternals && !reflection.flags.isExternal && state !== 1) {\n                    new NavigationItem('Internals', null, parent, 'tsd-is-external');\n                    state = 1;\n                } else if (hasExternals && reflection.flags.isExternal && state !== 2) {\n                    new NavigationItem('Externals', null, parent, 'tsd-is-external');\n                    state = 2;\n                }\n\n                const item = NavigationItem.create(reflection, parent);\n                includeDedicatedUrls(reflection, item);\n                if (callback) {\n                    callback(reflection, item);\n                }\n            });\n        }\n\n        /**\n         * Build the navigation structure.\n         *\n         * @param hasSeparateGlobals  Has the project a separated globals.html file?\n         * @return                    The root node of the generated navigation structure.\n         */\n        function build(hasSeparateGlobals: boolean): NavigationItem {\n            const root = new NavigationItem('Index', 'index.html');\n\n            if (entryPoint === project) {\n                const globals = new NavigationItem('Globals', hasSeparateGlobals ? 'globals.html' : 'index.html', root);\n                globals.isGlobals = true;\n            }\n\n            const modules: DeclarationReflection[] = [];\n            project.getReflectionsByKind(ReflectionKind.SomeModule).forEach((someModule) => {\n                let target = someModule.parent;\n                let inScope = (someModule === entryPoint);\n                while (target) {\n                    if (target.kindOf(ReflectionKind.ExternalModule)) {\n                        return;\n                    }\n                    if (entryPoint === target) {\n                        inScope = true;\n                    }\n                    target = target.parent;\n                }\n\n                if (inScope && someModule instanceof DeclarationReflection) {\n                    modules.push(someModule);\n                }\n            });\n\n            if (modules.length < 10) {\n                buildGroups(modules, root);\n            } else {\n                buildGroups(entryPoint.getChildrenByKind(ReflectionKind.SomeModule), root, buildChildren);\n            }\n\n            return root;\n        }\n\n        const entryPoint = this.getEntryPoint(project);\n        return build(this.application.options.getValue('readme') !== 'none');\n    }\n\n    /**\n     * Triggered before the renderer starts rendering a project.\n     *\n     * @param event  An event object describing the current render operation.\n     */\n    private onRendererBegin(event: RendererEvent) {\n        if (event.project.groups) {\n            event.project.groups.forEach(DefaultTheme.applyGroupClasses);\n        }\n\n        for (let id in event.project.reflections) {\n            const reflection = event.project.reflections[id];\n            if (reflection instanceof DeclarationReflection) {\n                DefaultTheme.applyReflectionClasses(<DeclarationReflection> reflection);\n            }\n\n            if (reflection instanceof ContainerReflection && reflection['groups']) {\n                reflection['groups'].forEach(DefaultTheme.applyGroupClasses);\n            }\n        }\n    }\n\n    /**\n     * Return a url for the given reflection.\n     *\n     * @param reflection  The reflection the url should be generated for.\n     * @param relative    The parent reflection the url generation should stop on.\n     * @param separator   The separator used to generate the url.\n     * @returns           The generated url.\n     */\n    static getUrl(reflection: Reflection, relative?: Reflection, separator: string = '.'): string {\n        let url = reflection.getAlias();\n\n        if (reflection.parent && reflection.parent !== relative &&\n            !(reflection.parent instanceof ProjectReflection)) {\n            url = DefaultTheme.getUrl(reflection.parent, relative, separator) + separator + url;\n        }\n\n        return url;\n    }\n\n    /**\n     * Return the template mapping fore the given reflection.\n     *\n     * @param reflection  The reflection whose mapping should be resolved.\n     * @returns           The found mapping or NULL if no mapping could be found.\n     */\n    static getMapping(reflection: DeclarationReflection): TemplateMapping {\n        for (let i = 0, c = DefaultTheme.MAPPINGS.length; i < c; i++) {\n            const mapping = DefaultTheme.MAPPINGS[i];\n            if (reflection.kindOf(mapping.kind)) {\n                return mapping;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Build the url for the the given reflection and all of its children.\n     *\n     * @param reflection  The reflection the url should be created for.\n     * @param urls        The array the url should be appended to.\n     * @returns           The altered urls array.\n     */\n    static buildUrls(reflection: DeclarationReflection, urls: UrlMapping[]): UrlMapping[] {\n        const mapping = DefaultTheme.getMapping(reflection);\n        if (mapping) {\n            if (!reflection.url || !DefaultTheme.URL_PREFIX.test(reflection.url)) {\n                const url = [mapping.directory, DefaultTheme.getUrl(reflection) + '.html'].join('/');\n                urls.push(new UrlMapping(url, reflection, mapping.template));\n\n                reflection.url = url;\n                reflection.hasOwnDocument = true;\n            }\n\n            for (let key in reflection.children) {\n                const child = reflection.children[key];\n                if (mapping.isLeaf) {\n                    DefaultTheme.applyAnchorUrl(child, reflection);\n                } else {\n                    DefaultTheme.buildUrls(child, urls);\n                }\n            }\n        } else {\n            DefaultTheme.applyAnchorUrl(reflection, reflection.parent);\n        }\n\n        return urls;\n    }\n\n    /**\n     * Generate an anchor url for the given reflection and all of its children.\n     *\n     * @param reflection  The reflection an anchor url should be created for.\n     * @param container   The nearest reflection having an own document.\n     */\n    static applyAnchorUrl(reflection: Reflection, container: Reflection) {\n        if (!reflection.url || !DefaultTheme.URL_PREFIX.test(reflection.url)) {\n            let anchor = DefaultTheme.getUrl(reflection, container, '.');\n            if (reflection['isStatic']) {\n                anchor = 'static-' + anchor;\n            }\n\n            reflection.url = container.url + '#' + anchor;\n            reflection.anchor = anchor;\n            reflection.hasOwnDocument = false;\n        }\n\n        reflection.traverse((child) => {\n            if (child instanceof DeclarationReflection) {\n                DefaultTheme.applyAnchorUrl(child, container);\n            }\n        });\n    }\n\n    /**\n     * Generate the css classes for the given reflection and apply them to the\n     * [[DeclarationReflection.cssClasses]] property.\n     *\n     * @param reflection  The reflection whose cssClasses property should be generated.\n     */\n    static applyReflectionClasses(reflection: DeclarationReflection) {\n        const classes: string[] = [];\n        let kind: string;\n\n        if (reflection.kind === ReflectionKind.Accessor) {\n            if (!reflection.getSignature) {\n                classes.push('tsd-kind-set-signature');\n            } else if (!reflection.setSignature) {\n                classes.push('tsd-kind-get-signature');\n            } else {\n                classes.push('tsd-kind-accessor');\n            }\n        } else {\n            kind = ReflectionKind[reflection.kind];\n            classes.push(DefaultTheme.toStyleClass('tsd-kind-' + kind));\n        }\n\n        if (reflection.parent && reflection.parent instanceof DeclarationReflection) {\n            kind = ReflectionKind[reflection.parent.kind];\n            classes.push(DefaultTheme.toStyleClass(`tsd-parent-kind-${kind}`));\n        }\n\n        let hasTypeParameters = !!reflection.typeParameters;\n        reflection.getAllSignatures().forEach((signature) => {\n            hasTypeParameters = hasTypeParameters || !!signature.typeParameters;\n        });\n\n        if (hasTypeParameters)            { classes.push('tsd-has-type-parameter'); }\n        if (reflection.overwrites)        { classes.push('tsd-is-overwrite'); }\n        if (reflection.inheritedFrom)     { classes.push('tsd-is-inherited'); }\n        if (reflection.flags.isPrivate)   { classes.push('tsd-is-private'); }\n        if (reflection.flags.isProtected) { classes.push('tsd-is-protected'); }\n        if (reflection.flags.isStatic)    { classes.push('tsd-is-static'); }\n        if (reflection.flags.isExternal)  { classes.push('tsd-is-external'); }\n        if (!reflection.flags.isExported) { classes.push('tsd-is-not-exported'); }\n\n        reflection.cssClasses = classes.join(' ');\n    }\n\n    /**\n     * Generate the css classes for the given reflection group and apply them to the\n     * [[ReflectionGroup.cssClasses]] property.\n     *\n     * @param group  The reflection group whose cssClasses property should be generated.\n     */\n    static applyGroupClasses(group: ReflectionGroup) {\n        const classes: string[] = [];\n        if (group.allChildrenAreInherited)  { classes.push('tsd-is-inherited'); }\n        if (group.allChildrenArePrivate)    { classes.push('tsd-is-private'); }\n        if (group.allChildrenAreProtectedOrPrivate) { classes.push('tsd-is-private-protected'); }\n        if (group.allChildrenAreExternal)   { classes.push('tsd-is-external'); }\n        if (!group.someChildrenAreExported) { classes.push('tsd-is-not-exported'); }\n\n        group.cssClasses = classes.join(' ');\n    }\n\n    /**\n     * Transform a space separated string into a string suitable to be used as a\n     * css class, e.g. \"constructor method\" > \"Constructor-method\".\n     */\n    static toStyleClass(str: string) {\n        return str.replace(/(\\w)([A-Z])/g, (m, m1, m2) => m1 + '-' + m2).toLowerCase();\n    }\n}\n"]}