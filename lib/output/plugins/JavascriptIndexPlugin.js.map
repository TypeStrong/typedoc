{"version":3,"file":"JavascriptIndexPlugin.js","sourceRoot":"","sources":["../../../src/lib/output/plugins/JavascriptIndexPlugin.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAE7B,sBAAuD,gCAAgC,CAAC,CAAA;AACxF,4BAA0B,qCAAqC,CAAC,CAAA;AAChE,2BAA2C,eAAe,CAAC,CAAA;AAC3D,mBAAwB,gBAAgB,CAAC,CAAA;AACzC,uBAA4B,WAAW,CAAC,CAAA;AASxC;IAA2C,yCAAiB;IAA5D;QAA2C,8BAAiB;IA6D5D,CAAC;IAxDG,0CAAU,GAAV;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,sBAAa,CAAC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IACzE,CAAC;IAQO,+CAAe,GAAvB,UAAwB,KAAmB;QACvC,IAAI,IAAI,GAAS,EAAE,CAAC;QACpB,IAAI,KAAK,GAAG,EAAE,CAAC;QAEf,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;YACxC,IAAI,UAAU,GAAgD,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAC7F,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,YAAY,6BAAqB,CAAC,CAAC;gBAAC,QAAQ,CAAC;YAE7D,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG;gBACf,CAAC,UAAU,CAAC,IAAI;gBAChB,UAAU,CAAC,KAAK,CAAC,UAAU;gBAC3B,UAAU,CAAC,IAAI,IAAI,EAAE,CAAC;gBACtB,QAAQ,CAAC;YAEb,IAAI,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;YAC/B,EAAE,CAAC,CAAC,MAAM,YAAY,yBAAiB,CAAC,CAAC,CAAC;gBACtC,MAAM,GAAG,IAAI,CAAC;YAClB,CAAC;YAED,IAAI,GAAG,GAAO;gBACV,EAAE,EAAE,IAAI,CAAC,MAAM;gBACf,IAAI,EAAK,UAAU,CAAC,IAAI;gBACxB,IAAI,EAAK,UAAU,CAAC,IAAI;gBACxB,GAAG,EAAM,UAAU,CAAC,GAAG;gBACvB,OAAO,EAAE,UAAU,CAAC,UAAU;aACjC,CAAC;YAEF,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;YACtC,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC1B,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,yBAAW,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC1E,CAAC;YAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC;QAED,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;QAC7E,IAAI,IAAI,GACJ,8BAA8B;YAC9B,wCAAwC;YACxC,wBAAwB,GAAG,IAAI,CAAC,SAAS,CAAC,EAAC,KAAK,EAAC,KAAK,EAAE,IAAI,EAAC,IAAI,EAAC,CAAC,GAAG,GAAG,CAAC;QAE9E,cAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACpC,CAAC;IA7DL;QAAC,sBAAS,CAAC,EAAC,IAAI,EAAC,kBAAkB,EAAC,CAAC;6BAAA;IA8DrC,4BAAC;AAAD,CAAC,AA7DD,CAA2C,8BAAiB,GA6D3D;AA7DY,6BAAqB,wBA6DjC,CAAA","sourcesContent":["import * as Path from \"path\";\n\nimport {DeclarationReflection, ProjectReflection} from \"../../models/reflections/index\";\nimport {GroupPlugin} from \"../../converter/plugins/GroupPlugin\";\nimport {Component, RendererComponent} from \"../components\";\nimport {writeFile} from \"../../utils/fs\";\nimport {RendererEvent} from \"../events\";\n\n\n/**\n * A plugin that exports an index of the project to a javascript file.\n *\n * The resulting javascript file can be used to build a simple search function.\n */\n@Component({name:\"javascript-index\"})\nexport class JavascriptIndexPlugin extends RendererComponent\n{\n    /**\n     * Create a new JavascriptIndexPlugin instance.\n     */\n    initialize() {\n        this.listenTo(this.owner, RendererEvent.BEGIN, this.onRendererBegin);\n    }\n\n\n    /**\n     * Triggered after a document has been rendered, just before it is written to disc.\n     *\n     * @param event  An event object describing the current render operation.\n     */\n    private onRendererBegin(event:RendererEvent) {\n        var rows:any[] = [];\n        var kinds = {};\n\n        for (var key in event.project.reflections) {\n            var reflection:DeclarationReflection = <DeclarationReflection>event.project.reflections[key];\n            if (!(reflection instanceof DeclarationReflection)) continue;\n\n            if (!reflection.url ||\n                !reflection.name ||\n                reflection.flags.isExternal ||\n                reflection.name == '')\n                continue;\n\n            var parent = reflection.parent;\n            if (parent instanceof ProjectReflection) {\n                parent = null;\n            }\n\n            var row:any = {\n                id: rows.length,\n                kind:    reflection.kind,\n                name:    reflection.name,\n                url:     reflection.url,\n                classes: reflection.cssClasses\n            };\n\n            if (parent) {\n                row.parent = parent.getFullName();\n            }\n\n            if (!kinds[reflection.kind]) {\n                kinds[reflection.kind] = GroupPlugin.getKindSingular(reflection.kind);\n            }\n\n            rows.push(row);\n        }\n\n        var fileName = Path.join(event.outputDirectory, 'assets', 'js', 'search.js');\n        var data =\n            'var typedoc = typedoc || {};' +\n            'typedoc.search = typedoc.search || {};' +\n            'typedoc.search.data = ' + JSON.stringify({kinds:kinds, rows:rows}) + ';';\n\n        writeFile(fileName, data, true);\n    }\n}\n"]}