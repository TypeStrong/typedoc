{"version":3,"file":"components.js","sourceRoot":"","sources":["../../src/lib/output/components.ts"],"names":[],"mappings":";;;;;;AAAA,IAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAG7B,0BAA+D,oBAAoB,CAAC,CAAA;AAM5E,iBAAS;AALjB,sBAAuD,6BAA6B,CAAC,CAAA;AAErF,uBAAuC,UAAU,CAAC,CAAA;AAMlD;IAAgD,qCAA2B;IAA3E;QAAgD,8BAA2B;IAAG,CAAC;IAAD,wBAAC;AAAD,CAAC,AAA/E,CAAgD,6BAAiB,GAAc;AAAzD,yBAAiB,oBAAwC,CAAA;AAM/E;IAA4D,iDAAiB;IAA7E;QAA4D,8BAAiB;IA+D7E,CAAC;IAvCa,kDAAU,GAApB;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE;YACtB,GAAC,sBAAa,CAAC,KAAK,CAAC,GAAE,IAAI,CAAC,eAAe;YAC3C,GAAC,kBAAS,CAAC,KAAK,CAAC,GAAM,IAAI,CAAC,WAAW;;SAC1C,CAAC,CAAC;;IACP,CAAC;IASM,sDAAc,GAArB,UAAsB,QAAe;QACjC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC5E,CAAC;IAQS,uDAAe,GAAzB,UAA0B,KAAmB;QACzC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;IACjC,CAAC;IAQS,mDAAW,GAArB,UAAsB,IAAc;QAChC,IAAI,CAAC,QAAQ,GAAK,IAAI,CAAC,GAAG,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,YAAY,6BAAqB,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACtF,CAAC;IACL,oCAAC;AAAD,CAAC,AA/DD,CAA4D,iBAAiB,GA+D5E;AA/DqB,qCAA6B,gCA+DlD,CAAA","sourcesContent":["import * as Path from \"path\";\nimport * as ts from \"typescript\";\n\nimport {Component, AbstractComponent, ChildableComponent} from \"../utils/component\";\nimport {ProjectReflection, DeclarationReflection} from \"../models/reflections/index\";\nimport {Renderer} from \"./renderer\";\nimport {RendererEvent, PageEvent} from \"./events\";\n\n\nexport {Component};\n\n\nexport abstract class RendererComponent extends AbstractComponent<Renderer> { }\n\n\n/**\n * A plugin for the renderer that reads the current render context.\n */\nexport abstract class ContextAwareRendererComponent extends RendererComponent\n{\n    /**\n     * The project that is currently processed.\n     */\n    protected project:ProjectReflection;\n\n    /**\n     * The reflection that is currently processed.\n     */\n    protected reflection:DeclarationReflection;\n\n    /**\n     * The url of the document that is being currently generated.\n     */\n    private location:string;\n\n\n\n    /**\n     * Create a new ContextAwareRendererPlugin instance.\n     *\n     * @param renderer  The renderer this plugin should be attached to.\n     */\n    protected initialize() {\n        this.listenTo(this.owner, {\n            [RendererEvent.BEGIN]: this.onBeginRenderer,\n            [PageEvent.BEGIN]:     this.onBeginPage\n        });\n    }\n\n\n    /**\n     * Transform the given absolute path into a relative path.\n     *\n     * @param absolute  The absolute path to transform.\n     * @returns A path relative to the document currently processed.\n     */\n    public getRelativeUrl(absolute:string):string {\n        var relative = Path.relative(Path.dirname(this.location), Path.dirname(absolute));\n        return Path.join(relative, Path.basename(absolute)).replace(/\\\\/g, '/');\n    }\n\n\n    /**\n     * Triggered before the renderer starts rendering a project.\n     *\n     * @param event  An event object describing the current render operation.\n     */\n    protected onBeginRenderer(event:RendererEvent) {\n        this.project = event.project;\n    }\n\n\n    /**\n     * Triggered before a document will be rendered.\n     *\n     * @param page  An event object describing the current render operation.\n     */\n    protected onBeginPage(page:PageEvent) {\n        this.location   = page.url;\n        this.reflection = page.model instanceof DeclarationReflection ? page.model : null;\n    }\n}\n"]}