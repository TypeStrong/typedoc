{"version":3,"file":"signature-index.js","sourceRoot":"","sources":["../../../src/lib/converter/nodes/signature-index.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAY,EAAE,WAAM,YAAY,CAAC,CAAA;AAEjC,sBAAgE,oBAAoB,CAAC,CAAA;AACrF,sBAA8B,oBAAoB,CAAC,CAAA;AAEnD,2BAAgD,eAAe,CAAC,CAAA;AAIhE;IAA6C,2CAA+C;IAA5F;QAA6C,8BAA+C;QAKxF,aAAQ,GAAmB;YACvB,GAA4B;SAC/B,CAAC;IAkBN,CAAC;IARG,yCAAO,GAAP,UAAQ,OAAe,EAAE,IAA4B;QACjD,IAAI,KAAK,GAA0B,OAAO,CAAC,KAAK,CAAC;QACjD,EAAE,CAAC,CAAC,KAAK,YAAY,6BAAqB,CAAC,CAAC,CAAC;YACzC,KAAK,CAAC,cAAc,GAAG,uBAAe,CAAC,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,sBAAc,CAAC,cAAc,CAAC,CAAC;QACpG,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAzBL;QAAC,sBAAS,CAAC,EAAC,IAAI,EAAC,sBAAsB,EAAC,CAAC;+BAAA;IA0BzC,8BAAC;AAAD,CAAC,AAzBD,CAA6C,mCAAsB,GAyBlE;AAzBY,+BAAuB,0BAyBnC,CAAA","sourcesContent":["import * as ts from \"typescript\";\n\nimport {Reflection, ReflectionKind, DeclarationReflection} from \"../../models/index\";\nimport {createSignature} from \"../factories/index\";\nimport {Context} from \"../context\";\nimport {Component, ConverterNodeComponent} from \"../components\";\n\n\n@Component({name:'node:signature-index'})\nexport class IndexSignatureConverter extends ConverterNodeComponent<ts.SignatureDeclaration>\n{\n    /**\n     * List of supported TypeScript syntax kinds.\n     */\n    supports:ts.SyntaxKind[] = [\n        ts.SyntaxKind.IndexSignature\n    ];\n\n\n    /**\n     * Analyze the given index signature declaration node and create a suitable reflection.\n     *\n     * @param context  The context object describing the current state the converter is in.\n     * @param node     The signature declaration node that should be analyzed.\n     * @return The resulting reflection or NULL.\n     */\n    convert(context:Context, node:ts.SignatureDeclaration):Reflection {\n        var scope = <DeclarationReflection>context.scope;\n        if (scope instanceof DeclarationReflection) {\n            scope.indexSignature = createSignature(context, node, '__index', ReflectionKind.IndexSignature);\n        }\n\n        return scope;\n    }\n}\n"]}