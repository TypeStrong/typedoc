{"version":3,"file":"reference.js","sourceRoot":"","sources":["../../../src/lib/converter/factories/reference.ts"],"names":[],"mappings":";AAEA,sBAA4B,0BAA0B,CAAC,CAAA;AAYvD,6BAAoC,OAAe,EAAE,MAAgB,EAAE,aAAsB;IACzF,IAAI,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;IAC9B,IAAI,EAAE,GAAQ,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC1C,IAAI,IAAI,GAAM,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IAE7C,EAAE,CAAC,CAAC,aAAa,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QACjC,IAAI,GAAG,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC;IAC9D,CAAC;IAED,MAAM,CAAC,IAAI,qBAAa,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACvC,CAAC;AAVe,2BAAmB,sBAUlC,CAAA","sourcesContent":["import * as ts from \"typescript\";\n\nimport {ReferenceType} from \"../../models/types/index\";\nimport {Context} from \"../context\";\n\n\n/**\n * Create a new reference type pointing to the given symbol.\n *\n * @param context  The context object describing the current state the converter is in.\n * @param symbol  The symbol the reference type should point to.\n * @param includeParent  Should the name of the parent be provided within the fallback name?\n * @returns A new reference type instance pointing to the given symbol.\n */\nexport function createReferenceType(context:Context, symbol:ts.Symbol, includeParent?:boolean):ReferenceType {\n    var checker = context.checker;\n    var id      = context.getSymbolID(symbol);\n    var name    = checker.symbolToString(symbol);\n\n    if (includeParent && symbol.parent) {\n        name = checker.symbolToString(symbol.parent) + '.' + name;\n    }\n\n    return new ReferenceType(name, id);\n}\n"]}