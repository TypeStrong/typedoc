{"version":3,"file":"type-parameter.js","sourceRoot":"","sources":["../../../src/lib/models/reflections/type-parameter.ts"],"names":[],"mappings":";;;;;;AACA,yBAAyD,YAAY,CAAC,CAAA;AAItE;IAA6C,2CAAU;IAUnD,iCAAY,MAAkB,EAAE,IAAuB;QACnD,kBAAM,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,yBAAc,CAAC,aAAa,CAAC,CAAC;QACvD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;IAChC,CAAC;IAMD,0CAAQ,GAAR;QACI,IAAI,MAAM,GAAG,gBAAK,CAAC,QAAQ,WAAE,CAAC;QAE9B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACZ,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACvC,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IACL,8BAAC;AAAD,CAAC,AA5BD,CAA6C,qBAAU,GA4BtD;AA5BY,+BAAuB,0BA4BnC,CAAA","sourcesContent":["import {Type, TypeParameterType} from \"../types/index\";\nimport {Reflection, ReflectionKind, ITypeContainer} from \"./abstract\";\nimport {DeclarationReflection} from \"./declaration\";\n\n\nexport class TypeParameterReflection extends Reflection implements ITypeContainer\n{\n    parent:DeclarationReflection;\n\n    type:Type;\n\n\n    /**\n     * Create a new TypeParameterReflection instance.\n     */\n    constructor(parent?:Reflection, type?:TypeParameterType) {\n        super(parent, type.name, ReflectionKind.TypeParameter);\n        this.type = type.constraint;\n    }\n\n\n    /**\n     * Return a raw object representation of this reflection.\n     */\n    toObject():any {\n        var result = super.toObject();\n\n        if (this.type) {\n            result.type = this.type.toObject();\n        }\n\n        return result;\n    }\n}\n"]}