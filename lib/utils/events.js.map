{"version":3,"file":"events.js","sourceRoot":"","sources":["../../src/lib/utils/events.ts"],"names":[],"mappings":"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","sourcesContent":["// Backbone.js 1.2.3\n// (c) 2010-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n// Backbone may be freely distributed under the MIT license.\n// For all details and documentation:\n// http://backbonejs.org\n//\n// The Events object is a typesafe conversion of Backbones Events object:\n// https://github.com/jashkenas/backbone/blob/05fde9e201f7e2137796663081105cd6dad12a98/backbone.js#L119-L374\n\nimport * as _ from \"lodash\";\n\n\nexport interface IEventCallback extends Function {\n    _callback?:Function;\n}\n\ninterface IEventListener {\n    obj:any;\n    objId:number;\n    id:number;\n    listeningTo:IEventListeners;\n    count:number;\n}\n\ninterface IEventListeners {\n    [id:number]:IEventListener;\n}\n\ninterface IEventHandler {\n    callback:IEventCallback;\n    context:any;\n    ctx:any;\n    listening:IEventListener;\n    priority:number;\n}\n\ninterface IEventHandlers {\n    [name:string]:IEventHandler[];\n}\n\nexport interface IEventMap {\n    [name:string]:IEventCallback;\n}\n\ninterface IEventIteratee<T, U> {\n    (events:U, name:string, callback:Function, options:T):U\n}\n\ninterface IOnApiOptions {\n    context:any;\n    ctx:any;\n    listening:any;\n    priority:number;\n}\n\ninterface IOffApiOptions {\n    context:any;\n    listeners:any;\n}\n\n\n// Regular expression used to split event strings.\nvar eventSplitter = /\\s+/;\n\n\n/**\n * Iterates over the standard `event, callback` (as well as the fancy multiple\n * space-separated events `\"change blur\", callback` and jQuery-style event\n * maps `{event: callback}`).\n */\nfunction eventsApi<T, U>(iteratee:IEventIteratee<T, U>, events:U, name:IEventMap|string, callback:IEventCallback, options:T):U {\n    var i = 0, names:string[];\n\n    if (name && typeof name === 'object') {\n        // Handle event maps.\n        if (callback !== void 0 && 'context' in options && options['context'] === void 0) {\n            options['context'] = callback;\n        }\n\n        for (names = _.keys(name); i < names.length ; i++) {\n            events = eventsApi(iteratee, events, names[i], name[names[i]], options);\n        }\n    } else if (name && typeof name === 'string' && eventSplitter.test(name)) {\n        // Handle space separated event names by delegating them individually.\n        for (names = name.split(eventSplitter); i < names.length; i++) {\n            events = iteratee(events, names[i], callback, options);\n        }\n    } else {\n        // Finally, standard events.\n        events = iteratee(events, <any>name, callback, options);\n    }\n\n    return events;\n}\n\n\n/**\n * The reducing API that adds a callback to the `events` object.\n */\nfunction onApi(events:IEventHandlers, name:string, callback:IEventCallback, options:IOnApiOptions):IEventHandlers {\n    if (callback) {\n        var handlers = events[name] || (events[name] = []);\n        var context = options.context, ctx = options.ctx, listening = options.listening, priority = options.priority;\n        if (listening) listening.count++;\n\n        handlers.push({\n            callback:  callback,\n            context:   context,\n            ctx:       context || ctx,\n            listening: listening,\n            priority:  priority\n        });\n\n        handlers.sort((a, b) => b.priority - a.priority);\n    }\n\n    return events;\n}\n\n\n/**\n * The reducing API that removes a callback from the `events` object.\n */\nfunction offApi(events:IEventHandlers, name:string, callback:IEventCallback, options:IOffApiOptions):IEventHandlers {\n    if (!events) return;\n\n    var i = 0, listening:IEventListener;\n    var context = options.context, listeners = options.listeners;\n\n    // Delete all events listeners and \"drop\" events.\n    if (!name && !callback && !context) {\n        var ids = _.keys(listeners);\n        for (; i < ids.length; i++) {\n            listening = listeners[ids[i]];\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n        }\n        return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n        name = names[i];\n        var handlers = events[name];\n\n        // Bail out if there are no events stored.\n        if (!handlers) break;\n\n        // Replace events if there are any remaining.  Otherwise, clean up.\n        var remaining:IEventHandler[] = [];\n        for (var j = 0; j < handlers.length; j++) {\n            var handler = handlers[j];\n            if (\n                callback && callback !== handler.callback &&\n                callback !== handler.callback._callback ||\n                context && context !== handler.context\n            ) {\n                remaining.push(handler);\n            } else {\n                listening = handler.listening;\n                if (listening && --listening.count === 0) {\n                    delete listeners[listening.id];\n                    delete listening.listeningTo[listening.objId];\n                }\n            }\n        }\n\n        // Update tail event if the list has any events.  Otherwise, clean up.\n        if (remaining.length) {\n            events[name] = remaining;\n        } else {\n            delete events[name];\n        }\n    }\n\n    if (_.size(events)) {\n        return events;\n    }\n}\n\n\n/**\n * Reduces the event callbacks into a map of `{event: onceWrapper`.}\n * `offer` unbinds the `onceWrapper` after it has been called.\n */\nfunction onceMap(map:IEventMap, name:string, callback:IEventCallback, offer:Function):IEventMap {\n    if (callback) {\n        var once = map[name] = <IEventCallback>_.once(function() {\n            offer(name, once);\n            callback.apply(this, arguments);\n        });\n\n        once._callback = callback;\n    }\n\n    return map;\n}\n\n\n/**\n * Handles triggering the appropriate event callbacks.\n */\nfunction triggerApi(objEvents:IEventHandlers, name:string, callback:Function, args:any[], triggerer:{(events:IEventHandler[], args:any[]):void} = triggerEvents):IEventHandlers {\n    if (objEvents) {\n        var events = objEvents[name];\n        var allEvents = objEvents['all'];\n        if (events && allEvents) allEvents = allEvents.slice();\n        if (events) triggerer(events, args);\n        if (allEvents) triggerer(allEvents, [name].concat(args));\n    }\n\n    return objEvents;\n}\n\n\n/**\n * A difficult-to-believe, but optimized internal dispatch function for\n * triggering events. Tries to keep the usual cases speedy (most internal\n * Backbone events have 3 arguments).\n */\nfunction triggerEvents(events:IEventHandler[], args:any[]) {\n    var ev:IEventHandler, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n        case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n        case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n        case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n        case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n        default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n}\n\n\n\n/**\n * An event object that can be processed with [[Events]].\n */\nexport class Event\n{\n    /**\n     * The name of the event.\n     */\n    private _name:string;\n\n    /**\n     * Has [[Event.stopPropagation]] been called?\n     */\n    private _isPropagationStopped:boolean;\n\n    /**\n     * Has [[Event.preventDefault]] been called?\n     */\n    private _isDefaultPrevented:boolean;\n\n\n\n    /**\n     * Create a new Event instance.\n     */\n    constructor(name:string) {\n        this._name = name;\n    }\n\n\n    /**\n     * Stop the propagation of this event. Remaining event handlers will not be executed.\n     */\n    stopPropagation() {\n        this._isPropagationStopped = true;\n    }\n\n\n    /**\n     * Prevent the default action associated with this event from being executed.\n     */\n    preventDefault() {\n        this._isDefaultPrevented = true;\n    }\n\n\n    /**\n     * Return the event name.\n     */\n    get name():string {\n        return this._name;\n    }\n\n\n    /**\n     * Has [[Event.stopPropagation]] been called?\n     */\n    get isPropagationStopped():boolean {\n        return this._isPropagationStopped;\n    }\n\n\n    /**\n     * Has [[Event.preventDefault]] been called?\n     */\n    get isDefaultPrevented():boolean {\n        return this._isDefaultPrevented;\n    }\n}\n\n\n\n/**\n * A class that provides a custom event channel.\n *\n * You may bind a callback to an event with `on` or remove with `off`;\n * `trigger`-ing an event fires all callbacks in succession.\n */\nexport class EventDispatcher\n{\n    /**\n     * Map of all handlers registered with the \"on\" function.\n     */\n    private _events:IEventHandlers;\n\n    /**\n     * Map of all objects this instance is listening to.\n     */\n    private _listeningTo:IEventListeners;\n\n    /**\n     * Map of all objects that are listening to this instance.\n     */\n    private _listeners:IEventListeners;\n\n    /**\n     * A unique id that identifies this instance.\n     */\n    private _listenId:string;\n\n\n\n    /**\n     * Bind an event to a `callback` function. Passing `\"all\"` will bind\n     * the callback to all events fired.\n     */\n    on(name:IEventMap|string, callback:IEventCallback, context?:any, priority?:number) {\n        this.internalOn(name, callback, context, priority);\n        return this;\n    }\n\n\n    /**\n     * Guard the `listening` argument from the public API.\n     */\n    private internalOn(name:IEventMap|string, callback:IEventCallback, context?:any, priority:number = 0, listening?:IEventListener) {\n        this._events = eventsApi(onApi, this._events || <IEventHandlers>{}, name, callback, {\n            context: context,\n            ctx: this,\n            listening: listening,\n            priority: priority\n        });\n\n        if (listening) {\n            var listeners = this._listeners || (this._listeners = {});\n            listeners[listening.id] = listening;\n        }\n    }\n\n\n    /**\n     * Bind an event to only be triggered a single time. After the first time\n     * the callback is invoked, its listener will be removed. If multiple events\n     * are passed in using the space-separated syntax, the handler will fire\n     * once for each event, not once for a combination of all events.\n     */\n    once(name:IEventMap|string, callback:IEventCallback, context?:any, priority?:number) {\n        // Map the event into a `{event: once}` object.\n        var events = eventsApi(onceMap, <IEventMap>{}, name, callback, _.bind(this.off, this));\n        return this.on(events, void 0, context, priority);\n    }\n\n\n    /**\n     * Remove one or many callbacks. If `context` is null, removes all\n     * callbacks with that function. If `callback` is null, removes all\n     * callbacks for the event. If `name` is null, removes all bound\n     * callbacks for all events.\n     */\n    off(name:IEventMap|string, callback:IEventCallback, context?:any) {\n        if (!this._events) return this;\n\n        this._events = eventsApi(offApi, this._events, name, callback, {\n            context: context,\n            listeners: this._listeners\n        });\n\n        return this;\n    }\n\n\n    /**\n     * Inversion-of-control versions of `on`. Tell *this* object to listen to\n     * an event in another object... keeping track of what it's listening to\n     * for easier unbinding later.\n     */\n    listenTo(obj:EventDispatcher, name:IEventMap|string, callback?:IEventCallback, priority?:number) {\n        if (!obj) return this;\n        var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n        var listeningTo = this._listeningTo || (this._listeningTo = {});\n        var listening = listeningTo[id];\n\n        // This object is not listening to any other events on `obj` yet.\n        // Setup the necessary references to track the listening callbacks.\n        if (!listening) {\n            var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n            listening = listeningTo[id] = {\n                obj: obj,\n                objId: id,\n                id: thisId,\n                listeningTo: listeningTo,\n                count: 0\n            };\n        }\n\n        // Bind callbacks on obj, and keep track of them on listening.\n        obj.internalOn(name, callback, this, priority, listening);\n        return this;\n    }\n\n\n    /**\n     * Inversion-of-control versions of `once`.\n     */\n    listenToOnce(obj:EventDispatcher, name:IEventMap|string, callback:IEventCallback, priority?:number) {\n        // Map the event into a `{event: once}` object.\n        var events = eventsApi(onceMap, <IEventMap>{}, name, callback, _.bind(this.stopListening, this, obj));\n        return this.listenTo(obj, events, void 0, priority);\n    }\n\n\n    /**\n     * Tell this object to stop listening to either specific events ... or\n     * to every object it's currently listening to.\n     */\n    stopListening(obj?:EventDispatcher, name?:IEventMap|string, callback?:IEventCallback) {\n        var listeningTo = this._listeningTo;\n        if (!listeningTo) return this;\n\n        var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n        for (var i = 0; i < ids.length; i++) {\n            var listening = listeningTo[ids[i]];\n\n            // If listening doesn't exist, this object is not currently\n            // listening to obj. Break out early.\n            if (!listening) break;\n\n            listening.obj.off(name, callback, this);\n        }\n\n        if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n\n        return this;\n    }\n\n\n    /**\n     * Trigger one or many events, firing all bound callbacks. Callbacks are\n     * passed the same arguments as `trigger` is, apart from the event name\n     * (unless you're listening on `\"all\"`, which will cause your callback to\n     * receive the true name of the event as the first argument).\n     */\n    trigger(name:Event|IEventMap|string, ...args:any[]) {\n        if (!this._events) return this;\n\n        if (name instanceof Event) {\n            triggerApi(this._events, name.name, void 0, [name], (events:IEventHandler[], args:any[]) => {\n                var ev:IEventHandler, i = -1, l = events.length;\n                while (++i < l) {\n                    if (name.isPropagationStopped) return;\n                    ev = events[i];\n                    ev.callback.apply(ev.ctx, args);\n                }\n            });\n        } else {\n            eventsApi(triggerApi, this._events, <IEventMap|string>name, void 0, args);\n        }\n\n        return this;\n    }\n}\n"]}