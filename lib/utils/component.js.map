{"version":3,"file":"component.js","sourceRoot":"","sources":["../../src/lib/utils/component.ts"],"names":[],"mappings":"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","sourcesContent":["import * as _ from \"lodash\";\n\nimport {Application} from \"../application\";\nimport {EventDispatcher, Event, IEventMap} from \"./events\";\nimport {IOptionDeclaration} from \"./options/declaration\";\n\n\nexport interface IComponentHost {\n    application:Application;\n}\n\nexport interface IComponent extends AbstractComponent<IComponentHost> {\n\n}\n\n\nexport interface IComponentClass<T extends IComponent> extends Function {\n    new(owner:IComponentHost):T;\n}\n\n\ninterface IComponentList {\n    [name:string]:IComponentClass<IComponent>;\n}\n\n\ninterface IComponentRegistry {\n    [scope:string]:IComponentList;\n}\n\n\nexport interface IComponentOptions {\n    name?:string;\n    childClass?:Function;\n    internal?:boolean;\n}\n\n\nvar childMappings:{host:any, child:Function}[] = [];\n\n\nexport function Component(options:IComponentOptions):ClassDecorator {\n    return (target:IComponentClass<IComponent>) => {\n        var proto = target.prototype;\n        if (!(proto instanceof AbstractComponent)) {\n            throw new Error('The `Component` decorator can only be used with a subclass of `AbstractComponent`.');\n        }\n\n        if (options.childClass) {\n            if (!(proto instanceof ChildableComponent)) {\n                throw new Error('The `Component` decorator accepts the parameter `childClass` only when used with a subclass of `ChildableComponent`.');\n            }\n\n            childMappings.push({\n                host: proto,\n                child: options.childClass\n            });\n        }\n\n        var name = options.name;\n        if (name) {\n            proto.componentName = name;\n        }\n\n        var internal = !!options.internal;\n        if (name && !internal) {\n            for (var childMapping of childMappings) {\n                if (!(proto instanceof childMapping.child)) continue;\n\n                var host = childMapping.host;\n                var defaults = host._defaultComponents || (host._defaultComponents = {});\n                defaults[name] = target;\n                break;\n            }\n        }\n    };\n}\n\n\nexport function Option(options:IOptionDeclaration):PropertyDecorator {\n    return function(target:AbstractComponent<any>, propertyKey:string) {\n        if (!(target instanceof AbstractComponent)) {\n            throw new Error('The `Option` decorator can only be used on properties within an `AbstractComponent` subclass.');\n        }\n\n        var list = target['_componentOptions'] || (target['_componentOptions'] = []);\n        options.component = target['_componentName'];\n        list.push(options);\n\n        Object.defineProperty(target, propertyKey, {\n            get: function () {\n                return this.application.options.getValue(options.name)\n            },\n            enumerable: true,\n            configurable: true\n        });\n    }\n}\n\n\nexport class ComponentEvent extends Event\n{\n    owner:IComponentHost;\n\n    component:AbstractComponent<IComponentHost>;\n\n    static ADDED:string = 'componentAdded';\n\n    static REMOVED:string = 'componentRemoved';\n\n\n    constructor(name:string, owner:IComponentHost, component:AbstractComponent<IComponentHost>) {\n        super(name);\n        this.owner = owner;\n        this.component = component;\n    }\n}\n\n\n/**\n * Component base class.\n */\nexport abstract class AbstractComponent<O extends IComponentHost> extends EventDispatcher implements IComponentHost\n{\n    /**\n     * The owner of this component instance.\n     */\n    private _componentOwner:O;\n\n    /**\n     * The name of this component as set by the @Component decorator.\n     */\n    public componentName:string;\n\n    /**\n     * A list of options defined by this component.\n     */\n    private _componentOptions:IOptionDeclaration[];\n\n\n\n    /**\n     * Create new Component instance.\n     */\n    constructor(owner:O) {\n        super();\n        this._componentOwner = owner;\n        this.initialize();\n    }\n\n\n    /**\n     * Initialize this component.\n     */\n    protected initialize() {}\n\n\n    protected bubble(name:Event|IEventMap|string, ...args:any[]) {\n        super.trigger.apply(this, arguments);\n\n        var owner = <any>this.owner;\n        if (owner instanceof AbstractComponent) {\n            owner.bubble.apply(this._componentOwner, arguments);\n        }\n\n        return this;\n    }\n\n\n    /**\n     * Return all option declarations emitted by this component.\n     */\n    getOptionDeclarations():IOptionDeclaration[] {\n        return this._componentOptions ? this._componentOptions.slice() : [];\n    }\n\n    /**\n     * Return the application / root component instance.\n     */\n    get application():Application {\n        if (this._componentOwner) {\n            return this._componentOwner.application;\n        } else {\n            return null;\n        }\n    }\n\n\n    /**\n     * Return the owner of this component.\n     */\n    get owner():O {\n        return this._componentOwner;\n    }\n}\n\n\n/**\n * Component base class.\n */\nexport abstract class ChildableComponent<O extends IComponentHost, C extends IComponent> extends AbstractComponent<O>\n{\n    /**\n     *\n     */\n    private _componentChildren:{[name:string]:C};\n\n    private _defaultComponents:{[name:string]:IComponentClass<C>};\n\n\n    /**\n     * Create new Component instance.\n     */\n    constructor(owner:O) {\n        super(owner);\n\n        for (var name in this._defaultComponents) {\n            this.addComponent(name, this._defaultComponents[name]);\n        }\n    }\n\n\n    /**\n     * Retrieve a plugin instance.\n     *\n     * @returns  The instance of the plugin or NULL if no plugin with the given class is attached.\n     */\n    getComponent(name:string):C {\n        if (this._componentChildren && this._componentChildren[name]) {\n            return this._componentChildren[name];\n        } else {\n            return null;\n        }\n    }\n\n\n    getComponents():C[] {\n        return _.values<C>(this._componentChildren);\n    }\n\n\n    hasComponent(name:string):boolean {\n        return !!(this._componentChildren && this._componentChildren[name]);\n    }\n\n\n    addComponent<T extends C & IComponent>(name:string, componentClass:T|IComponentClass<T>):T {\n        if (!this._componentChildren) {\n            this._componentChildren = {};\n        }\n\n        if (this._componentChildren[name]) {\n            throw new Error('The component `%s` has already been added.');\n        } else {\n            var component:T = typeof componentClass == \"function\" ? new (<IComponentClass<T>>componentClass)(this) : <T>componentClass;\n            var event = new ComponentEvent(ComponentEvent.ADDED, this, component);\n\n            this.bubble(event);\n            this._componentChildren[name] = component;\n\n            return component;\n        }\n    }\n\n\n    removeComponent(name:string):C {\n        if (!this._componentChildren) return null;\n        var component = this._componentChildren[name];\n        if (component) {\n            delete this._componentChildren[name];\n            component.stopListening();\n            this.bubble(new ComponentEvent(ComponentEvent.REMOVED, this, component));\n            return component;\n        } else {\n            return null;\n        }\n    }\n\n\n    removeAllComponents() {\n        if (!this._componentChildren) return;\n        for (var name in this._componentChildren) {\n            this._componentChildren[name].stopListening();\n        }\n\n        this._componentChildren = {};\n    }\n}\n"]}