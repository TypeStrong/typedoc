{
    "root": true,
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "tsconfig.json"
    },
    "env": {
        "node": true,
        "es6": true
    },
    "plugins": ["@typescript-eslint"],
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended"
    ],
    "ignorePatterns": [
        "src/test/renderer/specs",
        "dist",
        "docs",
        "tmp",
        "coverage",
        "static/main.js",
        "src/lib/output/themes/default/assets",
        "node_modules",
        // Temporarily ignored until eslint supports TS 4.9
        "src/test/converter/class/getter-setter.ts",
        "src/test/converter/variables/variable.ts",
        "src/test/converter2/behavior/hiddenAccessor.ts",
        // Would be nice to lint these, but they shouldn't be included in the project,
        // so we need a second eslint config file.
        "example",
        "src/test/converter",
        "src/test/converter2",
        "src/test/module",
        "src/test/packages",
        "src/test/renderer",
        "src/test/slow/entry-points",
        "scripts",
        "bin"
    ],
    "rules": {
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/await-thenable": "error",

        // This one is just annoying since it complains at incomplete code
        "no-empty": "off",

        // This rule is factually incorrect. Interfaces which extend some type alias can be used to introduce
        // new type names. This is useful particularly when dealing with mixins.
        "@typescript-eslint/no-empty-interface": "off",

        // We still use `any` fairly frequently...
        "@typescript-eslint/ban-types": "off",
        "@typescript-eslint/no-explicit-any": "off",

        // Really annoying, doesn't provide any value.
        "@typescript-eslint/no-empty-function": "off",

        // Declaration merging with a namespace is a necessary tool when working with enums.
        "@typescript-eslint/no-namespace": "off",

        // Reported by TypeScript
        "@typescript-eslint/no-unused-vars": "off",

        "no-console": "warn",

        // Feel free to turn one of these back on and submit a PR!
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",

        "no-restricted-syntax": [
            "warn",
            {
                "selector": "ImportDeclaration[source.value=/.*perf$/]",
                "message": "Benchmark calls must be removed before committing."
            }
        ]
    },
    "overrides": [
        {
            "files": ["src/test/**"],
            "env": {
                "mocha": true
            }
        }
    ]
}
