{
  "id": 0,
  "name": "typedoc",
  "kind": 0,
  "flags": {},
  "children": [
    {
      "id": 1,
      "name": "\"function\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "%BASE%/function/function.ts",
      "children": [
        {
          "id": 35,
          "name": "moduleFunction",
          "kind": 2,
          "kindString": "Namespace",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "This is the module extending the function moduleFunction()."
          },
          "signatures": [
            {
              "id": 36,
              "name": "moduleFunction",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "This is a function that is extended by a module."
              },
              "parameters": [
                {
                  "id": 37,
                  "name": "arg",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "text": "An argument.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "children": [
            {
              "id": 52,
              "name": "functionVariable",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isLet": true
              },
              "comment": {
                "shortText": "This variable is appended to a function."
              },
              "sources": [
                {
                  "fileName": "function.ts",
                  "line": 160,
                  "character": 24
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 53,
              "name": "append",
              "kind": 64,
              "kindString": "Function",
              "flags": {},
              "signatures": [
                {
                  "id": 54,
                  "name": "append",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "This function is appended to another function."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "function.ts",
                  "line": 165,
                  "character": 19
                }
              ]
            },
            {
              "id": 55,
              "name": "prepend",
              "kind": 64,
              "kindString": "Function",
              "flags": {},
              "signatures": [
                {
                  "id": 56,
                  "name": "prepend",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "This function is appended to another function."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "function.ts",
                  "line": 172,
                  "character": 20
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Variables",
              "kind": 32,
              "children": [
                52
              ]
            },
            {
              "title": "Functions",
              "kind": 64,
              "children": [
                53,
                55
              ]
            }
          ],
          "sources": [
            {
              "fileName": "function.ts",
              "line": 118,
              "character": 30
            },
            {
              "fileName": "function.ts",
              "line": 156,
              "character": 28
            }
          ]
        },
        {
          "id": 44,
          "name": "assertIsNonNull",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 45,
              "name": "assertIsNonNull",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Asserts that an argument is not null."
              },
              "typeParameter": [
                {
                  "id": 46,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExported": true
                  }
                }
              ],
              "parameters": [
                {
                  "id": 47,
                  "name": "arg",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "text": "\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      },
                      {
                        "type": "intrinsic",
                        "name": "null"
                      },
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "predicate",
                "name": "arg",
                "asserts": true,
                "targetType": {
                  "type": "typeParameter",
                  "name": "T"
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "function.ts",
              "line": 139,
              "character": 31
            }
          ]
        },
        {
          "id": 38,
          "name": "assertionFunction",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 39,
              "name": "assertionFunction",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "This is an assertion function."
              },
              "parameters": [
                {
                  "id": 40,
                  "name": "condition",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "text": "The condition that is asserted to be true when this function returns.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "type": {
                "type": "predicate",
                "name": "condition",
                "asserts": true
              }
            }
          ],
          "sources": [
            {
              "fileName": "function.ts",
              "line": 125,
              "character": 33
            }
          ]
        },
        {
          "id": 41,
          "name": "checkerFunction",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 42,
              "name": "checkerFunction",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Assertion function with a type."
              },
              "parameters": [
                {
                  "id": 43,
                  "name": "anything",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "text": "\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "predicate",
                "name": "anything",
                "asserts": false,
                "targetType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "function.ts",
              "line": 131,
              "character": 31
            }
          ]
        },
        {
          "id": 4,
          "name": "exportedFunction",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 5,
              "name": "exportedFunction",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "This is a simple exported function."
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ],
          "sources": [
            {
              "fileName": "function.ts",
              "line": 9,
              "character": 32
            }
          ]
        },
        {
          "id": 18,
          "name": "functionWithDefaults",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 19,
              "name": "functionWithDefaults",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "This is a function with a parameter that has a default value.",
                "returns": "This is the return value of the function.\n"
              },
              "parameters": [
                {
                  "id": 20,
                  "name": "valueA",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "text": "A parameter with a default string value."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"defaultValue\""
                },
                {
                  "id": 21,
                  "name": "valueB",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "text": "A parameter with a default numeric value."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  "defaultValue": "100"
                },
                {
                  "id": 22,
                  "name": "valueC",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "text": "A parameter with a default NaN value."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  "defaultValue": "Number.NaN"
                },
                {
                  "id": 23,
                  "name": "valueD",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "text": "A parameter with a default boolean value."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "defaultValue": "true"
                },
                {
                  "id": 24,
                  "name": "valueE",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "text": "A parameter with a default null value."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "defaultValue": "null"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "sources": [
            {
              "fileName": "function.ts",
              "line": 60,
              "character": 36
            }
          ]
        },
        {
          "id": 14,
          "name": "functionWithOptionalValue",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 15,
              "name": "functionWithOptionalValue",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "This is a function with a parameter that is optional."
              },
              "parameters": [
                {
                  "id": 16,
                  "name": "requiredParam",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "text": "A normal parameter."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 17,
                  "name": "optionalParam",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true,
                    "isOptional": true
                  },
                  "comment": {
                    "text": "An optional parameter.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ],
          "sources": [
            {
              "fileName": "function.ts",
              "line": 48,
              "character": 41
            }
          ]
        },
        {
          "id": 6,
          "name": "functionWithParameters",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 7,
              "name": "functionWithParameters",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "This is a function with multiple arguments and a return value.",
                "returns": "This is the return value of the function.\n"
              },
              "parameters": [
                {
                  "id": 8,
                  "name": "paramZ",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "text": "This is a string parameter."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 9,
                  "name": "paramG",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "text": "This is a parameter flagged with any.\n    This sentence is placed in the next line.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 10,
                  "name": "paramA",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "text": "\n  This is a **parameter** pointing to an interface.\n\n  ~~~\n  const value:BaseClass = new BaseClass('test');\n  functionWithArguments('arg', 0, value);\n  ~~~\n"
                  },
                  "type": {
                    "type": "reference",
                    "name": "Object"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "sources": [
            {
              "fileName": "function.ts",
              "line": 28,
              "character": 38
            }
          ]
        },
        {
          "id": 25,
          "name": "functionWithRest",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "signatures": [
            {
              "id": 26,
              "name": "functionWithRest",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "This is a function with rest parameter.",
                "returns": "This is the return value of the function.\n"
              },
              "parameters": [
                {
                  "id": 27,
                  "name": "rest",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isRest": true
                  },
                  "comment": {
                    "text": "The rest parameter."
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "sources": [
            {
              "fileName": "function.ts",
              "line": 76,
              "character": 25
            }
          ]
        },
        {
          "id": 2,
          "name": "internalFunction",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "signatures": [
            {
              "id": 3,
              "name": "internalFunction",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "This is an internal function."
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ],
          "sources": [
            {
              "fileName": "function.ts",
              "line": 4,
              "character": 25
            }
          ]
        },
        {
          "id": 48,
          "name": "isNonNull",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 49,
              "name": "isNonNull",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Checks that an argument is not null."
              },
              "typeParameter": [
                {
                  "id": 50,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExported": true
                  }
                }
              ],
              "parameters": [
                {
                  "id": 51,
                  "name": "arg",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "text": "\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      },
                      {
                        "type": "intrinsic",
                        "name": "null"
                      },
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "predicate",
                "name": "arg",
                "asserts": false,
                "targetType": {
                  "type": "typeParameter",
                  "name": "T"
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "function.ts",
              "line": 149,
              "character": 25
            }
          ]
        },
        {
          "id": 28,
          "name": "multipleSignatures",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "This is the actual implementation, this comment will not be visible\nin the generated documentation.",
            "returns": "This is the return value of the function.\n"
          },
          "signatures": [
            {
              "id": 29,
              "name": "multipleSignatures",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "This is the first signature of a function with multiple signatures.",
                "returns": "This is the return value of the function.\n"
              },
              "parameters": [
                {
                  "id": 30,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "text": "The name value.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 31,
              "name": "multipleSignatures",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "This is the second signature of a function with multiple signatures.",
                "returns": "This is the return value of the function.\n"
              },
              "parameters": [
                {
                  "id": 32,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "text": "An object containing the name value."
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 33,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {
                        "isExported": true
                      },
                      "children": [
                        {
                          "id": 34,
                          "name": "name",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "comment": {
                            "text": "A value of the object.\n"
                          },
                          "sources": [
                            {
                              "fileName": "function.ts",
                              "line": 93,
                              "character": 47
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Variables",
                          "kind": 32,
                          "children": [
                            34
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "function.ts",
                          "line": 93,
                          "character": 41
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "sources": [
            {
              "fileName": "function.ts",
              "line": 85,
              "character": 34
            },
            {
              "fileName": "function.ts",
              "line": 93,
              "character": 34
            },
            {
              "fileName": "function.ts",
              "line": 101,
              "character": 34
            }
          ]
        },
        {
          "id": 11,
          "name": "variableFunction",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isConst": true
          },
          "comment": {
            "shortText": "This is a function that is assigned to a variable.",
            "returns": "This is the return value of the function.\n"
          },
          "signatures": [
            {
              "id": 12,
              "name": "variableFunction",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "This is a function that is assigned to a variable.",
                "returns": "This is the return value of the function.\n"
              },
              "parameters": [
                {
                  "id": 13,
                  "name": "someParam",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "shortText": "This is some numeric parameter."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "sources": [
            {
              "fileName": "function.ts",
              "line": 38,
              "character": 29
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Namespaces",
          "kind": 2,
          "children": [
            35
          ]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [
            44,
            38,
            41,
            4,
            18,
            14,
            6,
            25,
            2,
            48,
            28,
            11
          ]
        }
      ],
      "sources": [
        {
          "fileName": "function.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 57,
      "name": "\"generic-function\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "%BASE%/function/generic-function.ts",
      "children": [
        {
          "id": 62,
          "name": "functionWithGenericArrayParameter",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "signatures": [
            {
              "id": 63,
              "name": "functionWithGenericArrayParameter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "A function with a generic type array parameter.",
                "returns": "A generic array.\n"
              },
              "typeParameter": [
                {
                  "id": 64,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 65,
                  "name": "param",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "A generic parameter."
                  },
                  "type": {
                    "type": "typeParameter",
                    "name": "T"
                  }
                },
                {
                  "id": 66,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "A generic array parameter."
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "typeParameter",
                      "name": "T"
                    }
                  }
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "typeParameter",
                  "name": "T"
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "generic-function.ts",
              "line": 18,
              "character": 42
            }
          ]
        },
        {
          "id": 58,
          "name": "genericFunction",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "signatures": [
            {
              "id": 59,
              "name": "genericFunction",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Generic function short text.",
                "returns": "Generic function return value.\n"
              },
              "typeParameter": [
                {
                  "id": 60,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "comment": {
                    "text": "Generic function type parameter."
                  },
                  "type": {
                    "type": "reference",
                    "name": "Object"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 61,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "Generic function parameter."
                  },
                  "type": {
                    "type": "typeParameter",
                    "name": "T",
                    "constraint": {
                      "type": "reference",
                      "name": "Object"
                    }
                  }
                }
              ],
              "type": {
                "type": "typeParameter",
                "name": "T",
                "constraint": {
                  "type": "reference",
                  "name": "Object"
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "generic-function.ts",
              "line": 7,
              "character": 24
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Functions",
          "kind": 64,
          "children": [
            62,
            58
          ]
        }
      ],
      "sources": [
        {
          "fileName": "generic-function.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 67,
      "name": "\"implicit-types\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "%BASE%/function/implicit-types.ts",
      "children": [
        {
          "id": 68,
          "name": "BreakpointRange",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 70,
              "name": "end",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "implicit-types.ts",
                  "line": 1,
                  "character": 53
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 69,
              "name": "start",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "implicit-types.ts",
                  "line": 1,
                  "character": 40
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                70,
                69
              ]
            }
          ],
          "sources": [
            {
              "fileName": "implicit-types.ts",
              "line": 1,
              "character": 32
            }
          ]
        },
        {
          "id": 71,
          "name": "_breakpoints",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isLet": true
          },
          "sources": [
            {
              "fileName": "implicit-types.ts",
              "line": 3,
              "character": 16
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 72,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 75,
                  "name": "large",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "implicit-types.ts",
                      "line": 6,
                      "character": 9
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 68,
                    "name": "BreakpointRange"
                  }
                },
                {
                  "id": 74,
                  "name": "medium",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "implicit-types.ts",
                      "line": 5,
                      "character": 10
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 68,
                    "name": "BreakpointRange"
                  }
                },
                {
                  "id": 73,
                  "name": "small",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "implicit-types.ts",
                      "line": 4,
                      "character": 9
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 68,
                    "name": "BreakpointRange"
                  }
                },
                {
                  "id": 76,
                  "name": "xlarge",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "implicit-types.ts",
                      "line": 7,
                      "character": 10
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 68,
                    "name": "BreakpointRange"
                  }
                },
                {
                  "id": 77,
                  "name": "xxlarge",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "implicit-types.ts",
                      "line": 8,
                      "character": 11
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 68,
                    "name": "BreakpointRange"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Variables",
                  "kind": 32,
                  "children": [
                    75,
                    74,
                    73,
                    76,
                    77
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "implicit-types.ts",
                  "line": 3,
                  "character": 17
                }
              ]
            }
          }
        },
        {
          "id": 78,
          "name": "getBreakpoints",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 79,
              "name": "getBreakpoints",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 80,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {
                    "isExported": true
                  },
                  "children": [
                    {
                      "id": 83,
                      "name": "large",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "implicit-types.ts",
                          "line": 6,
                          "character": 9
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 68,
                        "name": "BreakpointRange"
                      }
                    },
                    {
                      "id": 82,
                      "name": "medium",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "implicit-types.ts",
                          "line": 5,
                          "character": 10
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 68,
                        "name": "BreakpointRange"
                      }
                    },
                    {
                      "id": 81,
                      "name": "small",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "implicit-types.ts",
                          "line": 4,
                          "character": 9
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 68,
                        "name": "BreakpointRange"
                      }
                    },
                    {
                      "id": 84,
                      "name": "xlarge",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "implicit-types.ts",
                          "line": 7,
                          "character": 10
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 68,
                        "name": "BreakpointRange"
                      }
                    },
                    {
                      "id": 85,
                      "name": "xxlarge",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "implicit-types.ts",
                          "line": 8,
                          "character": 11
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 68,
                        "name": "BreakpointRange"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        83,
                        82,
                        81,
                        84,
                        85
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "implicit-types.ts",
              "line": 11,
              "character": 30
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [
            68
          ]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            71
          ]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [
            78
          ]
        }
      ],
      "sources": [
        {
          "fileName": "implicit-types.ts",
          "line": 1,
          "character": 0
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "Modules",
      "kind": 1,
      "children": [
        1,
        57,
        67
      ]
    }
  ]
}